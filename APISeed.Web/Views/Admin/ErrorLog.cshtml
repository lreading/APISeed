@model IEnumerable<APISeed.Domain.Errors.ElmahErrorModel>
@{
    ViewBag.Title = "Error Logs";
}

<div class="row">
    <div class="col-md-12">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Application</th>
                    <th>Host</th>
                    <th>Type</th>
                    <th>Source</th>
                    <th>Message</th>
                    <th>Status Code</th>
                    <th>Time</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var error in Model)
                {
                    <tr data-errorid="@error.ErrorId.ToString()" data-id="@error.Id.ToString()">
                        <td>@error.Application</td>
                        <td>@error.Host</td>
                        <td>@error.Type</td>
                        <td>@error.Source</td>
                        <td><a href="javascript:void(0)" class="error-details">@error.Message </a></td>
                        <td>@error.StatusCode.ToString()</td>
                        <td>@error.TimeUtc.ToString()</td>
                        <td>
                            <i class="fa fa-trash action-icon set-error-resolved @(error.Resolved ? "text-success" : string.Empty)" title="Set Resolved"></i>
                            <i class="fa fa-eye action-icon set-error-viewed @(error.Viewed ? "text-success" : string.Empty)" title="Set Viewed"></i>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div id="ErrorModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Error Details</h4>
            </div>
            <div class="modal-body text-center">
                <p>Some text in the modal.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script type="text/javascript">
        (function () {
            $('.set-error-resolved').click(function (e) {
                e.preventDefault();
                if (!$(this).hasClass('text-success')) {
                    var row = $(this).closest('tr');
                    var id = row.data('id');
                    var icon = $(this);
                    $.ajax({
                        cache: false,
                        type: "POST",
                        url: "/Admin/ResolveError",
                        data: {
                            id: id
                        },
                        success: function (data) {
                            icon.addClass('text-success');
                            row.fadeOut(800, function () {
                                $(this).remove();
                            });
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert("Error marking error as resolved.  Ironically, the error has been logged... Refresh the page to see why.");
                        }
                    });
                }
            });

            $('.set-error-viewed').click(function (e) {
                e.preventDefault();
                if (!$(this).hasClass('text-success')) {
                    var row = $(this).closest('tr');
                    var id = row.data('id');
                    var icon = $(this);
                    $.ajax({
                        cache: false,
                        type: "POST",
                        url: "/Admin/MarkErrorAsRead",
                        data: {
                            id: id
                        },
                        success: function (data) {
                            icon.addClass('text-success');
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert("Error marking error as read.  Ironically, the error has been logged... Refresh the page to see why.");
                        }
                    });
                }
            });

            $('.error-details').click(function (e) {
                e.preventDefault();
                openModal();
                var id = $(this).closest('tr').data('id');
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "/Admin/GetErrorDetails",
                    data: {
                        id: id
                    },
                    success: function (data) {
                        var errorTable = getErrorTable(data);
                        setModalHtml(errorTable);
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert("Error getting error details.  Ironically, the error has been logged... Refresh the page to see why.");
                    }
                }); 
            });

            function getErrorTable(errorDetails) {
                var table = $('<table />', {
                    class: 'table table-striped'
                });
                if (errorDetails) {
                    for (var deet in errorDetails) {
                        var row = $('<tr />');
                        var title = $('<th />', {
                            text: deet
                        });
                        var val = $('<td />', {
                            html: getHtmlValue(errorDetails[deet]),
                            class: 'text-right'
                        });
                        row.append(title);
                        row.append(val);
                        row.appendTo(table);
                    }
                }
                return table;
            };

            function getHtmlValue(dict) {
                var values = [];
                if (typeof (dict) === 'object') {
                    for (var val in dict) {
                        values.push(val + ': ' + dict[val]);
                    }
                } else {
                    values.push(dict);
                }
                return values.join('<br />');
            }

            function setModalHtml(newHtml) {
                var modal = $('#ErrorModal');
                modal.find('.modal-body').html(newHtml);
            }

            function openModal() {
                // Clear the body
                var modal = $('#ErrorModal');
                var loading = $('<i />', {
                    class: 'fa fa-spinner fa-spin fa-4x'
                });
                modal.find('.modal-body').html(loading);

                modal.modal('show');
            }
        })();
    </script>    
}